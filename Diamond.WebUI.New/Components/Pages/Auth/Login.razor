@page "/login"
@using Diamond.WebUI.New.Services
@using Microsoft.AspNetCore.Components.Authorization

@rendermode InteractiveServer

@inject Diamond.WebUI.New.Services.AuthService AuthService
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager Nav

<h3>Login</h3>

@if (!string.IsNullOrEmpty(error))
{
    <div class="alert alert-danger">@error</div>
}

<EditForm Model="model" OnValidSubmit="Handle">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <InputText @bind-Value="model.Email" placeholder="Email" class="form-control mb-2" />
    <InputText @bind-Value="model.Password" type="password" placeholder="Password" class="form-control mb-2" />
    <button class="btn btn-primary">Login</button>
</EditForm>

@code {
    private Diamond.Share.Models.Auth.LoginRequest model = new();
    private string error;

    private async Task Handle()
    {
        try
        {
            var res = await AuthService.Login(model);
            ((CustomAuthStateProvider)AuthStateProvider).NotifyUserAuthentication(res.Token);
            Nav.NavigateTo("/");
        }
        catch (Exception ex)
        {
            error = "Login failed: " + ex.Message;
        }
    }
}
