@page "/login"

@rendermode InteractiveServer

@using System.Net.Http.Json
@using Microsoft.AspNetCore.Components.Authorization
@inject HttpClient Http
@inject NavigationManager Nav
@inject AuthenticationStateProvider AuthStateProvider
@inject IJSRuntime JS

<h3>Login</h3>

<EditForm Model="model" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-2">
        <InputText @bind-Value="model.Email" placeholder="Email" class="form-control" />
    </div>
    <div class="mb-2">
        <InputText @bind-Value="model.Password" placeholder="Password" type="password" class="form-control" />
    </div>
    <button class="btn btn-primary">Login</button>
</EditForm>

@code {
    private LoginModel model = new();
    private record LoginModel { public string Email { get; set; } = ""; public string Password { get; set; } = ""; }

    private async Task HandleLogin()
    {
        var resp = await Http.PostAsJsonAsync("http://localhost:5218/api/auth/login", model);
        if (!resp.IsSuccessStatusCode)
        {
            var err = await resp.Content.ReadAsStringAsync();
            // show error (toast or console)
            Console.WriteLine(err);
            return;
        }

        var payload = await resp.Content.ReadFromJsonAsync<LoginResponse>();
        var token = payload!.token;

        // store via JS and notify provider
        var apiAuth = (ApiAuthenticationStateProvider)AuthStateProvider;
        await apiAuth.MarkUserAsAuthenticated(token);

        Nav.NavigateTo("/");
    }

    private class LoginResponse { public string token { get; set; } = ""; public object user { get; set; } = new(); }
}
